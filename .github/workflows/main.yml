name: "Terraform github action"
run-name: "Deploy to ${{ inputs.deploy_target }} by @${{ github.actor }}"
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
permissions:
      id-token: write
      contents: read
      pull-requests: write
env:
  BUCKET_NAME : ${{ secrets.AWS_BUCKET_NAME}}
  AWS_REGION: ${{ secrets.AWS_REGION }}
jobs:
  terraform-check:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

  terraform-plan:
    runs-on: ubuntu-latest
    needs: terraform-check
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Plan Summary ðŸ“‹

            Plan status: \`${{ steps.plan.outcome }}\`

            <details><summary>View Details</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *By: @${{ github.actor }} | Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  terraform-apply:
    runs-on: ubuntu-latest
    needs: terraform-plan
    steps:
        - name: Git clone the repository
          uses: actions/checkout@v4
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            role-to-assume: ${{ secrets.AWS_ROLE }}
            aws-region: ${{ secrets.AWS_REGION }}
            role-session-name: GitHub-OIDC-TERRAFORM
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2
          with:
            terraform_version: 1.5.0
        - name: Terraform Init
          id: init
          run: terraform init
        - name: Terraform Apply
          if: github.ref == 'refs/heads/main' && github.event_name == 'push'
          run: terraform apply -auto-approve -input=false